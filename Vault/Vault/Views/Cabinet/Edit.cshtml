@model Vault.Data.ViewModels.CabinetModel


<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>CabinetModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

      <div id="customFieldsContainer">
        @for (int i = 0; i < Model.CustomFields.Count; i++)
        {
          <div class="col-xs-12">
            <div class="col-xs-4">
              @Html.DisplayFor(x => x.CustomFields.ElementAt(i).FieldNumber)
            </div>
            <div class="col-xs-4">
              @Html.EditorFor(x => x.CustomFields.ElementAt(i).FieldNumber)
            </div>
            <div class="col-xs-4">
              @Html.EnumDropDownListFor(x => x.CustomFields.ElementAt(i).DbType)
            </div>
          </div>

        }
      </div>

      <input id="addFieldBtn" name="addFieldBtn" type="button" value="Add Cabinet Field" class="btn btn-default" />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
